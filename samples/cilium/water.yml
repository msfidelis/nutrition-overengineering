apiVersion: v1
kind: Namespace
metadata:
  name: water
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: water-grpc
  name: water-grpc
  namespace: water
spec:
  replicas: 2
  selector:
    matchLabels:
      app: water-grpc
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "30000" 
        policy.cilium.io/proxy-visibility: "<Egress/53/UDP/DNS>,<Egress/30000/TCP/HTTP>"
      labels:
        app: water-grpc
        name: water-grpc
        version: v1
    spec:
      containers:
      - image: fidelissauro/water-grpc-service:latest
        name: water-grpc
        env:
        - name: ENVIRONMENT
          value: "dev"
        - name: ZIPKIN_COLLECTOR_ENDPOINT
          value: http://jaeger-collector.jaeger.svc.cluster.local:9411/api/v2/spans          
        ports:
        - containerPort: 30000
          name: http   
      terminationGracePeriodSeconds: 60
---
apiVersion: v1
kind: Service
metadata:
  name: water-grpc
  namespace: water
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "30000"
    service.cilium.io/lb-l7: enabled
  labels:
    app.kubernetes.io/name: water-grpc
    app.kubernetes.io/instance: health-api 
spec:
  ports:
  - name: web
    port: 30000
    protocol: TCP
  selector:
    app: water-grpc
  type: ClusterIP
---
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: allow-recommendations-to-water-grpc
  namespace: water
spec:
  endpointSelector:
    matchLabels:
      app: water-grpc
  ingress:
  - fromEndpoints:
    - matchLabels:
        app: recommendations-grpc
  - toPorts:
    - ports:
      - port: "30000"
        protocol: TCP
      rules:
        http:
        - method: "POST"
          path: "/water.WaterService/SayHello"
---
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: allow-prometheus-scrape
  namespace: water
spec:
  endpointSelector:
    matchLabels:
      app: water-grpc
  ingress:
  - toPorts:
    - ports:
      - port: "30000"
        protocol: TCP  
  - fromEndpoints:
    - matchLabels:
        namespace: prometheus