apiVersion: v1
kind: Namespace
metadata:
  name: bmr
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: bmr-grpc
  name: bmr-grpc
  namespace: bmr
spec:
  replicas: 2
  selector:
    matchLabels:
      app: bmr-grpc
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "30000"
        policy.cilium.io/proxy-visibility: "<Egress/53/UDP/DNS>,<Egress/30000/TCP/HTTP>"
      labels:
        app: bmr-grpc
        name: bmr-grpc
        version: v1
    spec:
      containers:
      - image: fidelissauro/bmr-grpc-service:latest
        name: bmr-grpc
        env:
        - name: ENVIRONMENT
          value: "dev"
        - name: ZIPKIN_COLLECTOR_ENDPOINT
          value: http://jaeger-collector.jaeger.svc.cluster.local:9411/api/v2/spans          
        ports:
        - containerPort: 30000
          name: http   
      terminationGracePeriodSeconds: 60
---
apiVersion: v1
kind: Service
metadata:
  name: bmr-grpc
  namespace: bmr
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "30000"
    service.cilium.io/lb-l7: enabled
  labels:
    app.kubernetes.io/name: bmr-grpc
    app.kubernetes.io/instance: health-api 
spec:
  ports:
  - name: web
    port: 30000
    protocol: TCP
  selector:
    app: bmr-grpc
  type: ClusterIP
---
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: allow-health-api-to-bmr-grpc
  namespace: bmr
spec:
  endpointSelector:
    matchLabels:
      app: bmr-grpc
  ingress:
  - fromEndpoints:
    - matchLabels:
        app: health-api
  - toPorts:
    - ports:
      - port: "30000"
        protocol: TCP
      rules:
        http:
        - method: "POST"
          path: "/bmr.BMRService/SayHello"
---
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: allow-prometheus-scrape
  namespace: bmr
spec:
  endpointSelector:
    matchLabels:
      app: bmr-grpc
  ingress:
  - toPorts:
    - ports:
      - port: "30000"
        protocol: TCP  
  - fromEndpoints:
    - matchLabels:
        namespace: prometheus
---
apiVersion: cilium.io/v2
kind: CiliumClusterwideEnvoyConfig
metadata:
  name: bmr-envoy-circuit-breaker
  namespace: bmr
spec:
  services:
    - name: bmr-grpc
      namespace: bmr
  resources:
    - "@type": type.googleapis.com/envoy.config.listener.v3.Listener
      name: envoy-lb-listener
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: envoy-lb-listener
                rds:
                  route_config_name: lb_route
                use_remote_address: true
                skip_xff_append: true
                http_filters:
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
    - "@type": type.googleapis.com/envoy.config.route.v3.RouteConfiguration
      name: lb_route
      virtual_hosts:
        - name: "lb_route"
          domains: [ "*" ]
          routes:
            - match:
                prefix: "/"
              route:
                weighted_clusters:
                  clusters:
                    - name: "bmr/bmr-grpc"
                      weight: 100
    - "@type": type.googleapis.com/envoy.config.cluster.v3.Cluster
      name: "bmr/bmr-grpc"
      connect_timeout: 10s
      lb_policy: ROUND_ROBIN
      type: EDS
      circuit_breakers:
        thresholds:
        - priority: "DEFAULT"
          max_requests: 20
          max_pending_requests: 10
      outlier_detection:
        split_external_local_origin_errors: true
        consecutive_local_origin_failure: 2